from scapy.all import IP, ICMP, Raw, send
import os
import re
import sys

class PacketInjector:
    def __init__(self, target_ip, packet_count=10, interface="eth0"):
        """
        Initialize the PacketInjector class with necessary parameters.
        :param target_ip: IP address of the target.
        :param packet_count: Number of packets to send.
        :param interface: Network interface to use (e.g., 'eth0').
        """
        if not self.validate_ip(target_ip):
            raise ValueError(f"Invalid IP address: {target_ip}")
        if not self.validate_packet_count(packet_count):
            raise ValueError(f"Invalid packet count: {packet_count}. Must be a positive integer.")

        self.target_ip = target_ip
        self.packet_count = packet_count
        self.interface = interface

    def validate_ip(self, ip):
        """
        Validate the IP address.
        :param ip: The IP address to validate.
        :return: True if valid, False otherwise.
        """
        ip_regex = re.compile(
            r'^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$'
        )
        return ip_regex.match(ip) is not None

    def validate_packet_count(self, count):
        """
        Validate the packet count to ensure it's a positive integer.
        :param count: The packet count to validate.
        :return: True if valid, False otherwise.
        """
        return count.isdigit() and int(count) > 0

    def inject_packet(self):
        """
        Craft and send ICMP packets to the target IP address.
        """
        print(f"[*] Injecting {self.packet_count} packets to {self.target_ip} via interface {self.interface}")
        for i in range(int(self.packet_count)):
            packet = IP(dst=self.target_ip) / ICMP() / Raw(load="PacketInjectionTest")
            send(packet, iface=self.interface, verbose=False)
            print(f"[+] Packet {i + 1} sent to {self.target_ip}")

    def run(self):
        """
        Run the packet injection attack.
        """
        try:
            self.inject_packet()
        except KeyboardInterrupt:
            print("\n[*] Packet injection interrupted. Exiting...")


if __name__ == "__main__":
    if os.geteuid() != 0:
        print("[-] Please run this script as root.")
        sys.exit(1)

    target_ip = input("Enter the target IP address: ").strip()
    packet_count = input("Enter the number of packets to send: ").strip()
    interface = input("Enter the network interface (default is eth0): ").strip() or "eth0"

    try:
        injector = PacketInjector(target_ip, packet_count, interface)
        injector.run()
    except ValueError as e:
        print(e)
